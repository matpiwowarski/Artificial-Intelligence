@{
    ViewData["Title"] = "N queens problem - local search algorithms";
}

<div class="text-center">
    <h1 class="display-4">
        Artificial intelligence
    </h1>
</div>

<h1>
    <button onclick="location.href='@Url.Action("Index", "LocalSearchAlgorithms")' " type="button" class="btn btn-warning btn-lg">
        Task 1
    </button>
</h1>

<div>
    <p>
        On the <b>N-Queens Problem</b>, implement the hill-climbing, simulated annealing, local beam search and genetic algorithms.
        Research the algorithms using the web.
        The application must have a graphical user interface and you must enable the user to change algorithm parameters.
        For simulated annealing, the user should be able to change the starting temperature and the cooling factor.
        For local beam search, the user should be able to change the number of states.
        For the genetic algorithm, the user should be able to change
        the size of a single generation, the percent of elitism, the crossover probability, the mutation probability and the number of generations.
    </p>
    <a href="https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Models/NQueensProblem/Documentation.md" title="Doc1">Documentatiom</a>
</div>

<hr />

<h1>
    <button onclick="location.href='@Url.Action("Index", "TicTacToe")' " type="button" class="btn btn-warning btn-lg">
        Task 2
    </button>
</h1>

<div>
    <p>
        Implement the minimax algorithm with alfa-beta pruning on a simple <b>Tic-Tac-Toe Game</b>.
        Create a graphical user interface and enable the user to choose the difficulty by setting the depth of the minimax game tree
        (e.g. number of moves to think ahead).
    </p>

    <a href="https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Models/TicTacToe/Documentation.md" title="Doc2">Documentatiom</a>
</div>

<hr />

<h1>
    <button onclick="location.href='@Url.Action("Index", "Symbol")' " type="button" class="btn btn-warning btn-lg">
        Task 3
    </button>
</h1>

<div>
    <p>
        Implement a <b>multi-layer artificial neural network which will learn written symbols</b>.
        Make a graphical user interface where the user will be able to input a character on a pixel grid (64x64).
        The character should be vectorized and is the input to the neural network.
        Implement the neural network using the backpropagation algorithm.
        The number of hidden layers and neurons, as well as the learning speed and the error boundary are all parameters
        which should be set from the user interface.
        All neurons should use the logistic activation function.
    </p>

    <a href="https://github.com/matpiwowarski/Local-Search-Algorithms" title="Doc3">Documentatiom</a>
</div>
