@model Chessboard

@{
    ViewBag.Title = "Local search algorithms";
    var queenImageLink = "https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Resources/queen.png?raw=true";
    var imgSize = "100px";

    if (Model.Size > 5)
    {
        imgSize = "50px";
    }

    void CheckIfQueenOrEmpty(ChessPiece[,] board, int i, int j)
    {
        if (board[i, j] == ChessPiece.Queen)
        {
            <img src=@queenImageLink alt="QUEEN" style="height: @imgSize; width: @imgSize;">
        }
        else
        {
            <img style="height: @imgSize; width: @imgSize;">
        }
    }

}
<h1>N-queens problem - @ViewBag.Title</h1>

<div class="row">
    <div class="col-8">
        <center>
            @* DISPLAY CHESSBOARD*@
            <h2>Chessboard size: @Model.Size x @Model.Size</h2>
            @{
                for (int i = 0; i < Model.Size; i++)
                {
                    for (int j = 0; j < Model.Size; j++)
                    {
                        if (i % 2 == 0)
                        {
                            if (j % 2 == 0)
                            {
                                <div style="height: @imgSize; width: @imgSize; background-color: lightgray; display:inline-block;">
                                    @{
                                        CheckIfQueenOrEmpty(Model.Board, i, j);
                                    }
                                </div>
                            }
                            else
                            {
                                <div style="height: @imgSize; width: @imgSize; background-color: orange; display:inline-block;">
                                    @{
                                        CheckIfQueenOrEmpty(Model.Board, i, j);
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            if (j % 2 == 0)
                            {
                                <div style="height: @imgSize; width: @imgSize; background-color: orange; display:inline-block;">
                                    @{
                                        CheckIfQueenOrEmpty(Model.Board, i, j);
                                    }
                                </div>
                            }
                            else
                            {
                                <div style="height: @imgSize; width: @imgSize; background-color: lightgray; display:inline-block;">
                                    @{
                                        CheckIfQueenOrEmpty(Model.Board, i, j);
                                    }
                                </div>
                            }
                        }
                    }
                    <br />
                }
            }
        </center>
    </div>
    <div class="col-4">
        <center>
            <div class="form-group">
                <label for="SizeSelect">Select Size</label>
                <select class="form-control" id="SizeSelect">
                    <option value=4>4x4</option>
                    <option value=5>5x5</option>
                    <option value=6>6x6</option>
                    <option value=7>7x7</option>
                    <option value=8>8x8</option>
                    <option value=9>9x9</option>
                    <option value=10>10x10</option>
                </select>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <p>@Html.ActionLink("Submit", "LocalSearchAlgorithms", new { size = 5 })</p>
                </div>
            </div>
        </center>
    </div>
</div>
<footer>
    <h3 style="text-align: center">Problem solved: @Model.IsSolved</h3>
</footer>
