@{
    ViewData["Title"] = "Local search algorithms";
    var nQueensProblem = (NQueensProblem)ViewBag.NQueensProblem;
    var chessboard = nQueensProblem.GetResultBoard();
    var queenImageLink = "https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Resources/queen.png?raw=true";

    void CheckIfQueenOrEmpty(ChessPiece[,] board, int i, int j)
    {
        if (board[i, j] == ChessPiece.Queen)
        {
            <img src=@queenImageLink alt="QUEEN" style="height: 100px; width: 100px;">
        }
        else
        {
            <img style="height: 100px; width: 100px;">
        }
    }

}
<h1>N-queens problem - @ViewData["Title"]</h1>

<div class="row">
    <div class="col-8">
        @* DISPLAY CHESSBOARD*@
        <h2>Chessboard size: @chessboard.Size x @chessboard.Size</h2>
        @{
            for (int i = 0; i < chessboard.Size; i++)
            {
                for (int j = 0; j < chessboard.Size; j++)
                {
                    if (i % 2 == 0)
                    {
                        if (j % 2 == 0)
                        {
                            <div style="height: 100px; width: 100px; background-color: lightgray; display:inline-block;">
                                @{
                                    CheckIfQueenOrEmpty(chessboard.Board, i, j);
                                }
                            </div>
                        }
                        else
                        {
                            <div style="height: 100px; width: 100px; background-color: orange; display:inline-block;">
                                @{
                                    CheckIfQueenOrEmpty(chessboard.Board, i, j);
                                }
                            </div>
                        }
                    }
                    else
                    {
                        if (j % 2 == 0)
                        {
                            <div style="height: 100px; width: 100px; background-color: orange; display:inline-block;">
                                @{
                                    CheckIfQueenOrEmpty(chessboard.Board, i, j);
                                }
                            </div>
                        }
                        else
                        {
                            <div style="height: 100px; width: 100px; background-color: lightgray; display:inline-block;">
                                @{
                                    CheckIfQueenOrEmpty(chessboard.Board, i, j);
                                }
                            </div>
                        }
                    }
                }
                <br />
            }
        }
    </div>
    <div class="col-4">
        <div class="form-group">
            <label for="SizeSelect">Select Size</label>
            <select class="form-control" id="SizeSelect">
                <option>4x4</option>
                <option>5x5</option>
                <option>6x6</option>
                <option>7x7</option>
                <option>8x8</option>
                <option>9x9</option>
                <option>10x10</option>
            </select>
        </div>
    </div>
</div>
    <footer>
        <h3 style="text-align: center">Problem solved: @nQueensProblem.CheckIfProblemSolved()</h3>
    </footer>
