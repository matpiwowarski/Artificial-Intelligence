@model ArtificialIntelligence.Models.TicTacToe.TicTacToe

@{
    ViewBag.Title = "Tic-Tac-Toe";
    var circleLink = "https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Resources/circle.png?raw=true";
    var crossLink = "https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Resources/cross.png?raw=true";

    void CheckIfCrossOrCircle(TicTacToeSymbol[,] ticTacToe, int x, int y)
    {
        if (ticTacToe[x, y] == TicTacToeSymbol.Cross)
        {
            <div class="doneMove" style="height:100px; width:100px;">
                <img src=@crossLink alt="cross" style="height: 100px; width: 100px;">
            </div>
        }
        else if (ticTacToe[x, y] == TicTacToeSymbol.Circle)
        {
            <div class="doneMove" style="height:100px; width:100px;">
                <img src=@circleLink alt="circle" style="height: 100px; width: 100px;">
            </div>
        }
        else
        {
            if (Model.IsFinsihed == false)
            {
                <button name="Button" value="@x@y" type="submit" style="height:100px; width:100px;">
                    <img class="empty" src=@crossLink alt="cross" style="height:85px; width:85px;" />
                </button>
            }
            else
            {
                <div class="doneMove" style="height:100px; width:100px;">
                    <img class="hidden" src=@crossLink alt="cross" style="height:100px; width:100px;vertical-align: central;" />
                </div>
            }
        }
    }
}

<center><h2>@ViewBag.Title: Minimax with alpha-beta pruning</h2></center>

<center>
    @using (Html.BeginForm("NextMove", "TicTacToe", FormMethod.Post))
    {
        @* TIC-TAC-TOE *@
        <div id="tictactoe">
            <div id="board">
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 0, 0);
                    }
                </div>
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 1, 0);
                    }
                </div>
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 2, 0);
                    }
                </div>
                <br />
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 0, 1);
                    }
                </div>
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 1, 1);
                    }
                </div>
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 2, 1);
                    }
                </div>
                <br />
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 0, 2);
                    }
                </div>
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 1, 2);
                    }
                </div>
                <div class="box">
                    @{
                        CheckIfCrossOrCircle(Model.ticTacToeBoard, 2, 2);
                    }
                </div>
            </div>
        </div>

        <p>@Html.ActionLink("new game", "Index")</p>

        @* Select Level *@
        <div class="row" style="margin-top: 20px;">
            <div class="col-3"></div>
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="text-align:left; vertical-align:bottom; display:inline-block;"><b>Easy</b></div>
                    <div class="col-4" style="text-align:center; vertical-align:top; display:inline-block;">Level</div>
                    <div class="col-4" style="text-align:right; vertical-align:bottom; display:inline-block;"><b>Hard</b></div>
                    <br />
                    <input id="Level" name="Level" type="range" min="1" max="9" value="@Model.Level" class="form-control-range slider">
                </div>
            </div>
            <div class="col-3"></div>
        </div>
    }

    @* Score *@
    <div class="row" style="margin-top: 20px;">
        <div class="col-2"></div>
        <div class="col-3">    <h3 class="text-primary" style="text-align: right;"> User: @Model.UserScore </h3></div>
        <div class="col-2">    <h3 style="text-align: center;"> Tie: @Model.TieScore   </h3></div>
        <div class="col-3">    <h3 style="text-align: left; color: red;"> Bot: @Model.BotScore   </h3></div>
        <div class="col-2"></div>
    </div>

</center>

<style>



    button {
        background: transparent;
        border: none !important;
    }

    .doneMove {
        display: inline-block;
    }

    #board {
        position: absolute;
        top: 130px;
        left: 0;
        right: 0;
        margin-left: auto;
        margin-right: auto;
    }

    .box {
        background-color: white;
        height: 100px;
        width: 100px;
        display: inline-block;
        margin: 5px;
    }

    .hidden{
        opacity: 0.0;
    }

    .empty {
        visibility: hidden;
        vertical-align: central;
    }

    .box:hover .empty {
        visibility: visible;
        opacity: 0.3;
    }

    #tictactoe {
        background-color: black;
        opacity: 0.8;
        margin-top: 30px;
        margin-bottom: 30px;
        width: 310px;
        height: 310px;
    }

    /* The slider itself */
    .slider {
        -webkit-appearance: none; /* Override default CSS styles */
        appearance: none;
        width: 100%; /* Full-width */
        height: 25px; /* Specified height */
        background: #d3d3d3; /* Grey background */
        outline: none; /* Remove outline */
        opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
        -webkit-transition: .2s; /* 0.2 seconds transition on hover */
        transition: opacity .2s;
    }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none; /* Override default look */
            appearance: none;
            width: 25px; /* Set a specific slider handle width */
            height: 25px; /* Slider handle height */
            background: #4CAF50; /* Green background */
            cursor: pointer; /* Cursor on hover */
        }

        /* Mouse-over effects */
        .slider:hover {
            opacity: 1; /* Fully shown on mouse-over */
        }

        .slider::-moz-range-thumb {
            width: 25px; /* Set a specific slider handle width */
            height: 25px; /* Slider handle height */
            background: #4CAF50; /* Green background */
            cursor: pointer; /* Cursor on hover */
        }
</style>
