@model Chessboard

@{
    ViewBag.Title = "Local search algorithms";
    var queenImageLink = "https://github.com/matpiwowarski/Local-Search-Algorithms/blob/master/N_Queens_problem/N_Queens_problem/Resources/queen.png?raw=true";
    var imgSize = "90px";

    if (Model.Size > 10)
    {
        imgSize = "30px";
    }
    else if (Model.Size > 8)
    {
        imgSize = "40px";
    }
    else if (Model.Size > 6)
    {
        imgSize = "50px";
    }
    else if (Model.Size > 4)
    {
        imgSize = "60px";
    }

    void CheckIfQueenOrEmpty(ChessPiece[,] board, int i, int j)
    {
        if (board[i, j] == ChessPiece.Queen)
        {
            <img src=@queenImageLink alt="QUEEN" style="height: @imgSize; width: @imgSize;">
        }
        else
        {
            <img style="height: @imgSize; width: @imgSize;">
        }
    }

}
<center><h2>N-queens problem - @ViewBag.Title</h2></center>

<div class="row">
    <div class="col">
        <div class="margin padding-info">
            <p class="board-info">Chessboard size: @Model.Size x @Model.Size</p>
            <p class="board-info">Heuristic: @Model.HeuristicResult</p>
            @if (Model.Steps > 0)
            {
                <p class="board-info">Steps: @Model.Steps </p>
            }
            else
            {
                <p class="board-info">Steps: - </p>
            }

            <div class="board-info">
                <span> Problem Solved: </span>
                @if (Model.IsSolved)
                {
                    <span class="board-info" style="color: green;">True</span>
                }
                else
                {
                    <span class="board-info" style="color: red;">False</span>
                }
            </div>
        </div>
    </div>
    <div class="col" id="chessboard">
        <center>
            @* DISPLAY CHESSBOARD*@

            <div class="chessboard margin padding">
                @{
                    for (int i = 0; i < Model.Size; i++)
                    {
                        for (int j = 0; j < Model.Size; j++)
                        {
                            if (i % 2 == 0)
                            {
                                if (j % 2 == 0)
                                {
                                    <div class="gray tile">
                                        @{
                                            CheckIfQueenOrEmpty(Model.Board, i, j);
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="orange tile">
                                        @{
                                            CheckIfQueenOrEmpty(Model.Board, i, j);
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                if (j % 2 == 0)
                                {
                                    <div class="orange tile">
                                        @{
                                            CheckIfQueenOrEmpty(Model.Board, i, j);
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="gray tile">
                                        @{
                                            CheckIfQueenOrEmpty(Model.Board, i, j);
                                        }
                                    </div>
                                }
                            }
                        }
                        <br />
                    }
                }
            </div>
            <p>@Html.ActionLink("Clear", "Index", new { size = @Model.Size })</p>

        </center>
    </div>
    <div class="col margin padding">
        <center>
            @using (Html.BeginForm("ChangeBoardgameSize", "LocalSearchAlgorithms", FormMethod.Post))
            {
                <b><label for="SizeSelect">Select Size</label></b>
                <select class="form-control" id="SizeSelect" name="SizeSelect">
                    <option value="4">4x4</option>
                    <option value="5">5x5</option>
                    <option value="6">6x6</option>
                    <option value="7">7x7</option>
                    <option value="8">8x8</option>
                    <option value="9">9x9</option>
                    <option value="10">10x10</option>
                    <option value="11">11x11</option>
                    <option value="12">12x12</option>
                </select>
                <button type="submit" class="btn btn-primary" style="margin-top: 15px; margin-bottom: 15px">
                    Change Size
                </button>
            }
            @using (Html.BeginForm("DoAlgorithm", "LocalSearchAlgorithms", FormMethod.Post))
            {
                <b><label for="AlgorithmSelect">Select Algorithm</label></b>
                <select onchange="selectAlgorithm()" class="form-control" id="AlgorithmSelect" name="AlgorithmSelect">
                    <option value="Hill Climbing">Hill Climbing</option>
                    <option value="Simulated Annealing">Simulated Annealing</option>
                    <option value="Local Beam Search">Local Beam Search</option>
                    <option value="Genetic">Genetic</option>
                </select>

                <div class="container" id="LocalBeamSearchParameters" style="display: none; margin-top: 15px;">
                    <div class="row">
                        <label class="col parameter-label" for="NumberOfStates">Number of states</label>
                        <input class="col-3 form-control" id="NumberOfStates" name="NumberOfStates" type="text" value="20"/>
                    </div>
                </div>

                <div class="container" id="HillClimbingParameters" style="display: block; margin-top: 15px;">
                    <div class="row">
                        <label class="col parameter-label" for="MaxSteps">Maximum number of steps</label>
                        <input class="col-3 form-control" id="MaxSteps" name="MaxSteps" type="text" value="50"/>
                    </div>
                </div>

                <div class="container" id="SimulatedAnnealingParameters" style="display: none; margin-top: 15px;">
                    <div class="row">
                        <label class="col parameter-label" for="StartingTemperature">Starting Temperature</label>
                        <input class="col-4 form-control" id="StartingTemperature" name="StartingTemperature" type="text" value="10000"/>
                    </div>
                    <div class="row" style="margin-top: 15px;">
                        <label class="col parameter-label" for="CoolingFactor">Cooling Factor</label>
                        <input class="col-4 form-control" id="CoolingFactor" name="CoolingFactor" type="text" value="1"/>
                    </div>
                </div>
                <div class="container" id="GeneticParameters" style="display: none; margin-top: 15px;">
                    <div class="row">
                        <label class="col parameter-label" for="SizeOfSingleGeneration">
                            Size Of Single Generation
                        </label>
                        <input class="col-3 form-control" id="SizeOfSingleGeneration" name="SizeOfSingleGeneration" type="text" value="100"/>
                    </div>
                    <div class="row" style="margin-top: 2px;">
                        <label class="col parameter-label" for="PercentOfElitism">
                        Percent Of Elitism (0-100)
                        </label>
                        <input class="col-3 form-control" id="PercentOfElitism" name="PercentOfElitism" type="text" value="20"/>
                    </div>

                    <div class="row" style="margin-top: 2px;">
                        <label class="col parameter-label" for="CrossoverProbability">
                        Crossover Probability (0-100)
                        </label>
                        <input class="col-3 form-control" id="CrossoverProbability" name="CrossoverProbability" type="text" value="35"/>
                    </div>
                    <div class="row" style="margin-top: 2px;">
                        <label class="col parameter-label" for="MutationProbability">
                            Mutation Probability (0-100)
                        </label>
                        <input class="col-3 form-control" id="MutationProbability" name="MutationProbability" type="text" value="5"/>
                    </div>
                    <div class="row" style="margin-top: 2px;">
                        <label class="col parameter-label" for="NumberOfGenerations">
                            Number Of Generations
                        </label>
                        <input class="col-3 form-control" id="NumberOfGenerations" name="NumberOfGenerations" type="text" value="1000"/>
                    </div>
                </div>

                <button type="submit" class="btn btn-success" style="margin-top: 15px">
                    Execute
                </button>
            }

        </center>
    </div>
</div>

<style>
    .padding {
        padding-top: 15px;
    }
    .padding-info {
        padding-top: 100px;
    }

    .margin {
        margin: 10px;
    }

    .board-info {
        text-align: left;
        margin-top: -15px;
        font-size: medium;
    }

    .form-control {
        text-align: center;
    }

    .chessboard {
        min-width: 450px;
    }

    .tile {
        height: @imgSize;
        width: @imgSize;
        display: inline-block;
    }

    .orange {
        background-color: orange;
    }

    .gray {
        background-color: lightgray;
    }

    select {
        text-align: center;
        text-align-last: center;
        -moz-text-align-last: center;
    }
    .parameter-label {
        margin-top: 10px;
        font-size: small;
        text-align: right;
    }
</style>

<script>
    document.getElementById("MaxSteps").defaultValue = "@Model.Parameters.MaximumNumberOfSteps";

    document.getElementById("StartingTemperature").defaultValue = "@Model.Parameters.StartingTemperature";
    document.getElementById("CoolingFactor").defaultValue = "@Model.Parameters.CoolingFactor";

    document.getElementById("NumberOfStates").defaultValue = "@Model.Parameters.NumberOfStates";

    document.getElementById("SizeOfSingleGeneration").defaultValue = "@Model.Parameters.SizeOfSingleGeneration";
    document.getElementById("PercentOfElitism").defaultValue = "@Model.Parameters.PercentOfElitism";
    document.getElementById("CrossoverProbability").defaultValue = "@Model.Parameters.CrossoverProbability";
    document.getElementById("MutationProbability").defaultValue = "@Model.Parameters.MutationProbability";
    document.getElementById("NumberOfGenerations").defaultValue = "@Model.Parameters.NumberOfGenerations";
</script>
